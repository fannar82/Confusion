<?xml version="1.0"?>
<project name="TicTacToe" default="debug">
	<property name="project.config" value="debug" />
	<property name="nant.onfailure" value="failure" />
	<property name="nant.onsuccess" value="success" />
	<target name="debug">
		<property name="project.config" value="debug" />
		<property name="build.debug" value="true" />
		<property name="basedir.suffix" value="debug" />
		<call target="build" />
 	</target>
  	<target name="release">
		<property name="project.config" value="release" />
		<property name="build.debug" value="false" />
		<property name="basedir.suffix" value="release" />
		<call target="clean" />
		<call target="build" />
		<call target="finalize" />
  	</target>
  	<target name="clean">
		<delete dir="${project::get-base-directory()}/builds/${basedir.suffix}" />
	</target>
	<target name="build" description="Compiles the source code">
		<property name="build.dir" 
			value="${project::get-base-directory()}/builds/${basedir.suffix}" />
		<mkdir dir="${build.dir}/docs" />
		<mkdir dir="${build.dir}/reports" />
		<csc target="exe"
			verbose="${build.debug}"
			output="${build.dir}/${project::get-name()}.exe" 
			debug="${build.debug}" 
			nowarn="1591,1572,1573"
			doc="${build.dir}/docs/${project::get-name()}.xml">
  			<sources>
				<include name="TicTacToe/*.cs" />
  			</sources>
		</csc>
		<mkdir dir="${project::get-base-directory()}/www/docs" />
		<exec program="mdoc" output="${build.dir}/reports/mdoc_update.txt" >
			<arg value="update" />
			<arg value="-o" />
			<arg value="${build.dir}/docs/" />
			<arg value="-i" />
			<arg value="${build.dir}/docs/${project::get-name()}.xml" />
			<arg value="${build.dir}/${project::get-name()}.exe" />
		</exec>
		<echo message="export html" />
		<exec program="mdoc" output="${build.dir}/reports/mdoc_html.txt" >
			<arg value="export-html" />
			<arg value="-o" />
			<arg value="${project::get-base-directory()}/www/docs" />
			<arg value="${build.dir}/docs" />
		</exec>
		<if test="${project.config=='debug'}">
  			<csc target="library" output="${build.dir}/${project::get-name()}_tests.dll">
				<sources>
	  				<include name="TicTacToeTest/*.cs" />
	  				<exclude name="TicTacToeTest/Program.cs" />
				</sources>
				<references basedir="${build.dir}">
	  				<include name="${project::get-name()}.exe" />
				</references>
				<pkg-references>
					<package name="mono-nunit" />
				</pkg-references>
  			</csc>
  			<mkdir dir="${build.dir}/reports" />
  			<nunit2>
				<formatter type="Plain" usefile="true" extension=".txt" outputdir="${build.dir}/reports" />
				<test assemblyname="${build.dir}/${project::get-name()}_tests.dll" />
  			</nunit2>
			<exec program="gendarme" output="${build.dir}/reports/codefaults.txt">
				<arg value="--config" />
				<arg value="rules.xml" />
				<arg value="${build.dir}/${project::get-name()}.exe" />
			</exec>	
		</if>
	</target>
	<target name="failure" >
		<delete file="/var/www/*.txt" />
		<delete file="/var/www/index.html" />
		<copy todir="/var/www">
			<fileset basedir="${build.dir}/reports">
				<include name="*.txt" />
			</fileset>
		</copy>
		<copy todir="/var/www/docs">
			<fileset basedir="${project::get-base-directory()}/www/docs">
				<include name="**/*" />
			</fileset>
		</copy>
		<delete file="/var/www/index.html" />
		<copy
			file="${project::get-base-directory()}/www/index.html"
			tofile="/var/www/index.html" />
		<copy file="${project::get-base-directory()}/www/style.css"
			tofile="/var/www/style.css" />
	</target>
	<target name="success">
		<delete file="/var/www/*.txt" />
		<copy todir="/var/www/docs">
                        <fileset basedir="${project::get-base-directory()}/www/docs">
                                <include name="**/*" />
                        </fileset>
                </copy>
		<delete file="/var/www/index.html" />
		<copy file="${project::get-base-directory()}/www/index_green.html"
                        tofile="/var/www/index.html" />
                <copy file="${project::get-base-directory()}/www/green.css"
                        tofile="/var/www/green.css" />
	</target>
	<target name="finalize">
		<zip zipfile="${build.dir}/tictactoe.zip">
			<fileset basedir="${build.dir}">
				<include name="*.exe" />
			</fileset>
		</zip>
		<exec program="scp">
			<arg value="-C" />
			<arg value="-i" />
			<arg value="${project::get-base-directory()}/confusion-openssh" />
			<arg value="${build.dir}/tictactoe.zip" />
			<arg value="confusion@fannarsworld.com" />
		</exec>
	</target>
</project>
